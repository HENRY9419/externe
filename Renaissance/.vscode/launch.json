{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
    {
        "name": "Arduino",
        "type": "arduino",
        "request": "launch",
        "program": "${file}",
        "cwd": "${workspaceFolder}",
        "MIMode": "gdb",
        "targetArchitecture": "arm",
        "miDebuggerPath": "",
        "debugServerPath": "",
        "debugServerArgs": "",
        "customLaunchSetupCommands": [
            {
                "text": "target remote localhost:3333"
            },
            {
                "text": "file \"${file}\""
            },
            {
                "text": "load"
            },
            {
                "text": "monitor reset halt"
            },
            {
                "text": "monitor reset init"
            }
        ],
        "stopAtEntry": true,
        "serverStarted": "Info\\ :\\ [\\w\\d\\.]*:\\ hardware",
        "launchCompleteCommand": "exec-continue",
        "filterStderr": true,
        "args": []
    },
        {
            "name": "(gdb) Pipe Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "<full path to pipe program such as plink.exe>",
                "pipeArgs": [],
                "pipeCwd": ""
            },
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        
        {
            "name": "Arduino",
            "type": "arduino",
            "request": "launch",
            "program": "${file}",
            "cwd": "${workspaceFolder}",
            "MIMode": "gdb",
            "targetArchitecture": "arm",
            "miDebuggerPath": "",
            "debugServerPath": "",
            "debugServerArgs": "",
            "customLaunchSetupCommands": [
                {
                    "text": "target remote localhost:3333"
                },
                {
                    "text": "file \"${file}\""
                },
                {
                    "text": "load"
                },
                {
                    "text": "monitor reset halt"
                },
                {
                    "text": "monitor reset init"
                }
            ],
            "stopAtEntry": true,
            "serverStarted": "Info\\ :\\ [\\w\\d\\.]*:\\ hardware",
            "launchCompleteCommand": "exec-continue",
            "filterStderr": true,
            "args": []
        },
        {
            "name": "(gdb) Bash on Windows Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": ["-c"],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "processId": "${command:pickProcess}",
            "MIMode": "gdb",
            "miDebuggerPath": "/path/to/gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
    {
        "name": "Arduino",
        "type": "arduino",
        "request": "launch",
        "program": "${file}",
        "cwd": "${workspaceFolder}",
        "MIMode": "gdb",
        "targetArchitecture": "arm",
        "miDebuggerPath": "",
        "debugServerPath": "",
        "debugServerArgs": "",
        "customLaunchSetupCommands": [
            {
                "text": "target remote localhost:3333"
            },
            {
                "text": "file \"${file}\""
            },
            {
                "text": "load"
            },
            {
                "text": "monitor reset halt"
            },
            {
                "text": "monitor reset init"
            }
        ],
        "stopAtEntry": true,
        "serverStarted": "Info\\ :\\ [\\w\\d\\.]*:\\ hardware",
        "launchCompleteCommand": "exec-continue",
        "filterStderr": true,
        "args": []
    },
        

        {
            "name": "clang.exe - Build and debug active file",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}\\${fileBasenameNoExtension}.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "lldb",
            "miDebuggerPath": "C:\\Program Files\\LLVM\\bin\\lldb-mi.exe",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "C/C++: clang.exe build active file"
        }
    ]
}